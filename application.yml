
# The @activeProfile@ will be filtered by gradle build parameter: gradle clean war -Pprofiles=production
# You must add the 'clean' build command, if you don't edit this yml file. Otherwise, the profiles change
# will not work. If no profiles specified, the 'default' will be used.
spring:
  profiles:
    active: @profiles@
  aop:
    proxy-target-class: true

# You can change the default http port
server:
  port: 8080
  contextPath: /dist   # 配置后bootRun，访问时要http://localhost:8080/dist

logging:
  level:
    ROOT: INFO

howLoading:
  enabled: false
  directory: /Users/zhengpeng/space/git/dist


executorPool:
  executorMaxPoolSize: 64
  executorCoreSize: 32
  keepAliveSeconds: 60
  queueCapacity: 100

# Kafka producer configuration
monitor:
  enabled: true

tsp:
  monitor:
    queue: queue.pla.tsp.monitor.log
  providerConfig:
    subSystem: MOB
    packageName: dist   # TSP's {packageName} must be consistent with {contextPath}
    maintainer: guohongming
    isScan: true

  name:
    weixinInfo: MOB.BASIS.WeixinController.getWeixinInfo
    queryByPvalue: AIM.PTRWEB.RestfulServiceController.queryByPvalue
    pValueCheck: AIM.PTRWEB.RestfulServiceController.checkValidity
    dailyStat: BI.UIS.NtkController.dailyStat
    sendEmail: PLA.EMAIL.EdmController.sendInternalEmail
    productType: BOH.PL.ProductTypeController.root
    productInfo: BOH.NM.ProductController.queryCommonProductInfos
    applyForPValue: AIM.PTRWEB.RestfulServiceController.getPValueForMRM
    cmsProductList: MOB.CMS.CmsController.getCmsProductListForJava
    hotKeywords: BI.UIS.PortraitController.getSearchHotKeywords
    orderSummary: NWS.OrderController.queryOrderSummary
    travelCoupon: PMF.EXCUTE.TravelCouponController.provide
    chargeCoupon: PMF.EXCUTE.TravelCouponController.charge
    poiSearch: POI.JPP.PoiController.poiSearch
    tagSerarch: MOB.DATA.MatrixDataController.poiTag
    getRecommendPoiIds: BI.UIS.PortraitController.getRecommendPoiIds

  services:
    - MOB.BASIS.WeixinController.getWeixinInfo
    - MALL.PRD.PackageController.getProductPackageForCustomer
    - MALL.ORD.OrderController.batchQueryOrderForCust
    - MALL.PRD.ProductInfoController.getProductSummaryForCustomer
    - MALL.ORD.OrderController.createOrderForPga
    - AIM.PTRWEB.RestfulServiceController.queryByPvalue
    - AIM.PTRWEB.RestfulServiceController.checkValidity
    - BI.UIS.NtkController.dailyStat
    - PLA.EMAIL.EdmController.sendInternalEmail
    - BOH.PL.ProductTypeController.root
    - BOH.NM.ProductController.queryCommonProductInfos
    - AIM.PTRWEB.RestfulServiceController.getPValueForMRM
    - MOB.CMS.CmsController.getCmsProductListForJava
    - BI.UIS.PortraitController.getSearchHotKeywords
    - PMF.EXCUTE.Activity.queryPsInfoForOuter
    - PGA.NWS.OrderController.listIds
    - NWS.OrderController.queryOrderSummary
    - POI.JPP.PoiController.poiSearch
    - NWS.OrderController.queryOrders
    - PMF.EXCUTE.TravelCouponController.provide
    - PMF.EXCUTE.TravelCouponController.charge
    - MOB.DATA.MatrixDataController.poiTag
    - BI.UIS.PortraitController.getRecommendPoiIds

  connectTimeout: 3
  socketTimeout: 3

shiro:
  ldap:
    url: "ldap://172.20.1.250:389"
    principal:
      suffix: "@tuniu-inc.com"
    searchbase: "dc=tuniu-inc,dc=com"

druid:
  group:
    defaultGroup: dist
    balance: robin
  datasource:
    identity: dist
    group: dist
    role: master
    driverClassName: com.mysql.jdbc.Driver
    filters: stat
    validationQuery: SELECT 1
    mapperLocations: classpath*:mapper/**/*Mapper.xml

# Different profiles' configuration
---
spring:
  profiles: default
#  activemq:
#    broker-url: failover:(tcp://ord-master.mq.tuniu-sst.org:61616,tcp://ord-slave.mq.tuniu-ssts.org:61616)?startupMaxReconnectAttempts=2

redis:
  config:
    common: #供缓存组件使用redis配置
      host: doc-mob_dist-cache.tuniu-sst.org
      port: 6379
      maxTotal: 200
      minIdle: 1
      maxIdle: 20
    default: #默认Json客户端的redis配置
      host: doc-mob_dist-cache.tuniu-sst.org
      port: 6379
      maxTotal: 200
      minIdle: 1
      maxIdle: 20

monitor:
  enabled: false

tsp:
  monitor:
    broker: failover://(tcp://bj-tspmq-master.tuniu-cie.org,tcp://bj-tspmq-slave-01.tuniu-cie.org:61616,tcp://bj-tspmq-slave-02.tuniu-cie.org:61616)
  registry:
    address: bj-tspregister-master.tuniu-cie1.org:9989,bj-tspregister-slave.tuniu-cie1.org:9989

pebble:
  zookeeper: zk01.tuniu-sst.org:2181,zk02.tuniu-sst.org:2182,zk03.tuniu-sst.org:2183

druid:
  datasource:
    url: jdbc:mysql://hx-mob_dist-d_mob_dist-master.db.tuniu-sit.org:3306/d_mob_dist?useUnicode=true&characterEncoding=UTF-8
#    url: jdbc:mysql://hx-mob_dist-d_mob_dist-master.db.tuniu-sst.org:3306/d_mob_dist?useUnicode=true&characterEncoding=UTF-8
    username: d_mob_dist_rw
    password: tuniu520

tubing:
  server: http://public-api.tubing.pla.tuniu-sit.org/tubing

rest:
  name:
    weixinPay: http://mob-dany.api.tuniu.org/dany/weixin/miniApp/pay
    weixinAccessToken: http://mob-dany.api.tuniu.org/dany/weixin/miniApp/getAccessToken
    mobPush: http://push.tuniu.org/push/addWeChatTask
    mobPushDeviceTask: http://push.tuniu.org/push/addDeviceTask
    oa: http://protected-api.oa.tuniu.org/api
  cmt:
    bindUser: http://cmt-tgsp.api.tuniu.org/tgsp/guideUser/bindUserInfo
    createSpace: http://cmt-tgsp.api.tuniu.org/tgsp/spaceV2/operateSpace
    getUserInfo: http://cmt-tgsp.api.tuniu.org/tgsp/guideUserV2/getUserInfoByOpenId
    articleList: http://cmt-tgsp.api.tuniu.org/tgsp/articleV2/spaceArticleList
    editUserNickname: http://cmt-tgsp.api.tuniu.org/tgsp/guideUser/editUserNickname
  channel:
    index: http://admin.tuniu.org/api/cms/app/channel
    product: http://admin.tuniu.org/api/cms/app/config
  ror:
    crm: http://public-api.crm.search.tuniu.org/ror/crm/query
    keyBrand: http://public-api.nj.dcb.tuniu.org/ror/category/key_brand/query
  soc:
    basic: http://soc-basic.api.tuniu.org
  mob:
    dany: http://mob-dany.api.tuniu.org
    groupon: http://mob-groupon.api.tuniu.org/groupon/group/recommendProduct
  poi:
    searchTag: http://public-api.nj.venus.tuniu.org/api/poi/search/tag
accountConstant:
  accessId: 1001
  secret: bwjwQ06ufJo4eWhi

---
spring:
  profiles: sit
  redis:
    host: doc-mob_dist-cache.tuniu-sit.org
    port: 6379
  activemq:
    broker-url: failover:(tcp://ord-master.mq.tuniu-sit.org:61616,tcp://ord-slave.mq.tuniu-sit.org:61616)?startupMaxReconnectAttempts=2

redis:
  config:
    common: #供缓存组件使用redis配置
      host: doc-mob_dist-cache.tuniu-sit.org
      port: 6379
    default: #默认Json客户端的redis配置
      host: doc-mob_dist-cache.tuniu-sit.org
      port: 6379


tsp:
  monitor:
    broker: failover://(tcp://bj-tspmq-master.tuniu-sit.org:61616)?randomize=false&jms.useAsyncSend=true
  registry:
    address: bj-tspregister-master.tuniu-sit.org:9989,bj-tspregister-slave.tuniu-sit.org:9989

pebble:
  zookeeper: zk-master.tuniu-sit.org:2181,zk-master.tuniu-sit.org:2182,zk-master.tuniu-sit.org:2183

druid:
  datasource:
    url: jdbc:mysql://hx-mob_dist-d_mob_dist-master.db.tuniu-sit.org:3306/d_mob_dist?useUnicode=true&characterEncoding=UTF-8
    username: d_mob_dist_rw
    password: tuniu520

tubing:
  server: http://public-api.tubing.pla.tuniu-sit.org/tubing

rest:
  name:
    weixinPay: http://mob-dany.api.tuniu-sit.org/dany/weixin/miniApp/pay
    weixinAccessToken: http://mob-dany.api.tuniu-sit.org/dany/weixin/miniApp/getAccessToken
    mobPush: http://push.tuniu.org/push/addWeChatTask
    mobPushDeviceTask: http://push.tuniu.org/push/addDeviceTask
    oa: http://protected-api.oa.tuniu-sit.org/api
  cmt:
    bindUser: http://cmt-tgsp.api.tuniu-sit.org/tgsp/guideUser/bindUserInfo
    createSpace: http://cmt-tgsp.api.tuniu-sit.org/tgsp/spaceV2/operateSpace
    getUserInfo: http://cmt-tgsp.api.tuniu-sit.org/tgsp/guideUserV2/getUserInfoByOpenId
    articleList: http://cmt-tgsp.api.tuniu-sit.org/tgsp/articleV2/spaceArticleList
    editUserNickname: http://cmt-tgsp.api.tuniu-sit.org/tgsp/guideUser/editUserNickname
  channel:
    index: http://admin.tuniu-sit.org/api/cms/app/channel
    product: http://admin.tuniu-sit.org/api/cms/app/config
  ror:
    crm: http://10.10.32.211:11303/ror/crm/query
    keyBrand: http://public-api.nj.dcb.tuniu-sit.org/ror/category/key_brand/query
  soc:
    basic: http://soc-basic.api.tuniu-sit.org
  mob:
    dany: http://mob-dany.api.tuniu-sit.org
    groupon: http://mob-groupon.api.tuniu.org/groupon/group/recommendProduct
  poi:
    searchTag: http://public-api.nj.venus.tuniu.org/api/poi/search/tag
accountConstant:
  accessId: 1
  secret: 123456

---
spring:
  profiles: production
  activemq:
    broker-url: failover:(tcp://ord-master.mq.tuniu.org:61616,tcp://ord-slave.mq.tuniu.org:61616)?startupMaxReconnectAttempts=2
  redis:
    host: doc-mob_dist-cache.tuniu.org
    port: 6379

redis:
  config:
    common: #供缓存组件使用redis配置
      host: doc-mob_dist-cache.tuniu.org
      port: 6379
      minIdle: 20
    default: #默认Json客户端的redis配置
      host: doc-mob_dist-cache.tuniu.org
      port: 6379
      minIdle: 20

monitor:
  enabled: true

tsp:
  monitor:
    broker: failover://(tcp://bj-tspmq-master.tuniu.org:61616,tcp://bj-tspmq-slave-01.tuniu.org:61616,tcp://bj-tspmq-slave-02.tuniu.org:61616)?randomize=false&jms.useAsyncSend=true
  registry:
    address: bj-tspregister-master.tuniu.org:9989,bj-tspregister-slave.tuniu.org:9989

pebble:
  zookeeper: pebble01.zk.tuniu.org:3181,pebble02.zk.tuniu.org:3181,pebble03.zk.tuniu.org:3181,pebble04.zk.tuniu.org:3181,pebble05.zk.tuniu.org:3181

tubing:
  server: http://tubing.tuniu.org/tubing

rest:
  cmt:
    bindUser: http://cmt-tgsp.api.tuniu.org/tgsp/guideUser/bindUserInfo
    createSpace: http://cmt-tgsp.api.tuniu.org/tgsp/spaceV2/operateSpace
    getUserInfo: http://cmt-tgsp.api.tuniu.org/tgsp/guideUserV2/getUserInfoByOpenId
    articleList: http://cmt-tgsp.api.tuniu.org/tgsp/articleV2/spaceArticleList
    editUserNickname: http://cmt-tgsp.api.tuniu.org/tgsp/guideUser/editUserNickname
  channel:
    index: http://admin.tuniu.org/api/cms/app/channel
    product: http://admin.tuniu.org/api/cms/app/config
  ror:
    crm: http://public-api.crm.search.tuniu.org/ror/crm/query
    keyBrand: http://public-api.nj.dcb.tuniu.org/ror/category/key_brand/query
  soc:
    basic: http://soc-basic.api.tuniu.org
  mob:
    dany: http://mob-dany.api.tuniu.org
    groupon: http://mob-groupon.api.tuniu.org/groupon/group/recommendProduct
  poi:
    searchTag: http://public-api.nj.venus.tuniu.org/api/poi/search/tag